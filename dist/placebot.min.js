!function(){"use strict";var place=r.place,api;r.placeModule("",function(t){api=t("api")});var PlaceBot=function(){this.placeMode=PlaceBot.placeMode.ARRAY,this.tiles=[],this.tileSelector=PlaceBot.selector.TopDown,this.tileGenerator=void 0,this.drawTimer=void 0,this.minTimer=100,this.lastDrawTime=0,console.log(["------------",,"PlaceBot "+PlaceBot.version,"------------"].join("\n")),this.load(),this._setTimer()};Object.defineProperties(PlaceBot.prototype,{cooldownRemaining:{get:function(){return this.nextDrawTime-Date.now()}},nextDrawTime:{get:function(){return r.place.cooldownEndTime}},canDraw:{get:function(){return this.cooldownRemaining<0&&this.lastDrawTime!==this.nextDrawTime}}}),PlaceBot.prototype._importObject=function(t){if("string"==typeof t)try{t=JSON.parse(t)}catch(t){return{success:!1,error:t.message}}return{success:!0,data:t}},PlaceBot.prototype._importFunction=function(data){if("string"==typeof data)try{data=eval(data)}catch(t){return{success:!1,error:t.message}}return"function"!=typeof data?{success:!1,error:"Invalid data type"}:{success:!0,data:data}},PlaceBot.prototype._tilesObject=function(){return{mode:this.placeMode,tiles:this.tiles,fn:this.tileSelector.name}},PlaceBot.prototype._settingsObject=function(){return{minTimer:this.minTimer}},PlaceBot.prototype.exportTiles=function(){return JSON.stringify(this._tilesObject())},PlaceBot.prototype.importTiles=function(t){var e=this._importObject(t);if(!e.success)return console.log("Failed to import tiles: %s",e.error),!1;var o=Object.assign(this._tilesObject(),e.data);this.tiles=o.tiles||[],this.setTileFunction(o.mode,o.fn)},PlaceBot.prototype.exportSettings=function(){return JSON.stringify(this._settingsObject())},PlaceBot.prototype.importSettings=function(t){var e=this._importObject(t);if(!e.success)return console.log("Failed to import settings: %s",e.error),!1;var o=Object.assign(this._settingsObject(),e.data);this.tileSelector=PlaceBot.selector[o.tileSelector]||PlaceBot.selector.TopDown,this.minTimer=o.minTimer},PlaceBot.prototype.exportBot=function(){return JSON.stringify({settings:this._settingsObject(),tiles:this.tiles})},PlaceBot.prototype.importBot=function(t){var e=this._importObject(t);if(!e.success)return console.log("Failed to import bot: %s",e.error),!1;this.importSettings(e.data.settings),this.importTiles(e.data.tiles)},PlaceBot.prototype.save=function(){localStorage.setItem("placebot_settings",this.exportSettings()),localStorage.setItem("placebot_tiles",this.exportTiles())},PlaceBot.prototype.load=function(){this.importSettings(localStorage.getItem("placebot_settings")),this.importTiles(localStorage.getItem("placebot_tiles"))},PlaceBot.prototype.setTileFunction=function(t,e){switch(t){case PlaceBot.placeMode.ARRAY:this.placeMode=PlaceBot.placeMode.ARRAY,this.tileSelector=PlaceBot.selector[e]||PlaceBot.selector.TopDown,this.tileGenerator=void 0;break;case PlaceBot.placeMode.FUNCTION:this.placeMode=PlaceBot.placeMode.FUNCTION,this.tileSelector=void 0;var o=this._importFunction(e);if(o.success){this.tileGenerator=o.data;break}console.log("Function import failed: %s",o.error);default:this.tiles=[],this.setTileFunction(PlaceBot.placeMode.ARRAY,"TopDown")}},PlaceBot.prototype._setTimer=function(){clearTimeout(this.drawTimer);var t=Math.round(Math.max(this.minTimer,this.cooldownRemaining));this.drawTimer=setTimeout(this.drawNext.bind(this),t),console.log("Scheduled draw in %sms",t)},PlaceBot.prototype.drawNext=function(){if(this.canDraw&&this.tiles.length){var t=this.tileSelector(this.tiles),e=this.tiles.splice(t,1)[0];api.getPixelInfo(e[0],e[1]).then(function(t){t.color!==e[2]&&this.drawTile.apply(this,e),this._setTimer()}.bind(this))}this._setTimer()},PlaceBot.prototype.drawTile=function(t,e,o){this.canDraw&&(this.lastDrawTime=this.nextDrawTime,place.setColor(o),place.drawTile(t,e),console.log("Drawing %s at (%s, %s)",place.palette[o],t,e))},PlaceBot.version="0.0.5",PlaceBot.placeMode={ARRAY:0,FUNCTION:1},PlaceBot.selector={TopDown:function(t){var e=-1,o=1/0,i=1/0;return t.forEach(function(t,s){(t[1]<i||t[1]===i&&t[0]<o)&&(e=s,o=t[0],i=t[1])}),e},BottomUp:function(t){var e=-1,o=-1,i=-1;return t.forEach(function(t,s){(t[1]>i||t[1]===i&&t[0]>o)&&(e=s,o=t[0],i=t[1])}),e},Random:function(t){return Math.floor(Math.random()*t.length)},DrawOrder:function(t){return 0}},new PlaceBot}();